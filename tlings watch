[0mA used type name is not in scope.[0m

[0mErroneous code examples:[0m

[0m[0m[2mimpl Something {} // error: type name `Something` is not in scope

// or:

trait Foo {
    fn bar(N); // error: type name `N` is not in scope
}

// or:

fn foo(x: T) {} // type name `T` is not in scope[0m

[0mTo fix this error, please verify you didn't misspell the type name, you did[0m [0mdeclare it or imported it into the scope. Examples:[0m

[0m[0m[2mstruct Something;

impl Something {} // ok!

// or:

trait Foo {
    type N;

    fn bar(_: Self::N); // ok!
}

// or:

fn foo<T>(x: T) {} // ok![0m

[0mAnother case that causes this error is when a type is imported into a parent[0m [0mmodule. To fix this, you can follow the suggestion and use
File directly or[0m [0m[0m[2muse super::File;[0m which will import the types from the parent namespace. An[0m [0mexample that causes this error is below:[0m

[0m[0m[2muse std::fs::File;

mod foo {
    fn some_function(f: File) {}
}[0m

[0m[0m[2muse std::fs::File;

mod foo {
    // either
    use super::File;
    // or
    // use std::fs::File;
    fn foo(f: File) {}
}[0m[0m
